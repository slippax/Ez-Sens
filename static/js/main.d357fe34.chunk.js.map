{"version":3,"sources":["Components/Calculator/Selections/Item/Item.module.css","Components/Calculator/Selections/Item/Item.js","Components/Calculator/UI/TitleHead/TitleHead.js","Components/Calculator/UI/Calculator.js","Components/Calculator/UI/Particles/ParticleComponent.js","App.js","serviceWorker.js","index.js","Components/Calculator/UI/TitleHead/TitleHead.module.css","Components/Calculator/UI/Calculator.module.css"],"names":["module","exports","Item","options","value","label","useState","gameOne","setGameOne","gameTwo","setGameTwo","sensOne","setSensOne","dpiOne","setDpiOne","convertedValue","setConvertedValue","loading","setLoading","toggle","React","useCallback","useEffect","console","log","calculate","className","classes","From","onChange","selectionOne","To","selectionTwo","SensDpiFrom","TextField","id","selectionOneSens","target","defaultValue","selectionOneDpi","ConvertedValue","iterations","text","toFixed","WaitingLeft","size","color","navbar","Title","Text","Delay","ms","Backspace","count","delay","calculator","TitleHead","Items","style","position","top","left","width","height","params","particles","number","line_linked","enable","App","ParticleComponent","Calculator","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d357fe34.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"From\":\"Item_From__13q0M\",\"To\":\"Item_To__q_hhG\",\"SensDpiFrom\":\"Item_SensDpiFrom__1rc8b\",\"ConvertedValue\":\"Item_ConvertedValue__2rMnb\",\"WaitingLeft\":\"Item_WaitingLeft__bQZLW\"};","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nimport classes from \"./Item.module.css\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport ClimbingBoxLadder from \"react-spinners/PacmanLoader\";\r\n\r\nimport { Wave } from \"react-animated-text\";\r\n\r\nconst Item = () => {\r\n  const options = [\r\n    { value: 1, label: \"Valorant\" },\r\n    { value: 2, label: \"CS:GO\" },\r\n    { value: 3, label: \"Overwatch\" },\r\n  ];\r\n\r\n  const [gameOne, setGameOne] = useState(\"game\");\r\n  const [gameTwo, setGameTwo] = useState(\"game\");\r\n\r\n  const [sensOne, setSensOne] = useState(\"1\");\r\n\r\n  const [dpiOne, setDpiOne] = useState(\"800\");\r\n\r\n  const [convertedValue, setConvertedValue] = useState(1);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const toggle = React.useCallback(() => setLoading(!loading));\r\n\r\n  useEffect(() => {\r\n    console.log(gameOne.value + \"\" + gameTwo.value);\r\n    console.log(dpiOne);\r\n    console.log(sensOne);\r\n    calculate();\r\n    console.log(convertedValue);\r\n  });\r\n\r\n  const showConverted = () => {\r\n    if (loading) {\r\n      return <Wave iterations={1} text=\" Waiting...\" />;\r\n    }\r\n    if (!loading) {\r\n      return <Wave iterations={1} text={' ' + convertedValue.toFixed(3)} />;\r\n    }\r\n  };\r\n\r\n  const handleChangeFrom = (selectionOne) => {\r\n    setGameOne(selectionOne);\r\n  };\r\n\r\n  const handleChangeTo = (selectionTwo) => {\r\n    setGameTwo(selectionTwo);\r\n    if (loading) {\r\n      toggle();\r\n    }\r\n  };\r\n\r\n  const handleChangeFromDpi = (selectionOneDpi) => {\r\n    setDpiOne(selectionOneDpi.target.value);\r\n  };\r\n\r\n  const handleChangeFromSens = (selectionOneSens) => {\r\n    setSensOne(selectionOneSens.target.value);\r\n  };\r\n\r\n  const calculate = () => {\r\n    if (gameOne.label == \"Valorant\") {\r\n      if (gameTwo.label == \"Valorant\") {\r\n        setConvertedValue(sensOne * 1);\r\n      }\r\n      if (gameTwo.label == \"CS:GO\") {\r\n        setConvertedValue(sensOne * 3.18);\r\n      }\r\n      if (gameTwo.label == \"Overwatch\") {\r\n        setConvertedValue(sensOne * 10.61);\r\n      }\r\n    }\r\n\r\n    if (gameOne.label == \"CS:GO\") {\r\n      if (gameTwo.label == \"CS:GO\") {\r\n        setConvertedValue(sensOne * 1);\r\n      }\r\n      if (gameTwo.label == \"Valorant\") {\r\n        setConvertedValue(sensOne / 3.18);\r\n      }\r\n      if (gameTwo.label == \"Overwatch\") {\r\n        setConvertedValue(sensOne * 3.33);\r\n      }\r\n    }\r\n\r\n    if (gameOne.label == \"Overwatch\") {\r\n      if (gameTwo.label == \"Overwatch\") {\r\n        setConvertedValue(sensOne * 1);\r\n      }\r\n      if (gameTwo.label == \"Valorant\") {\r\n        setConvertedValue(sensOne / 10.61);\r\n      }\r\n      if (gameTwo.label == \"CS:GO\") {\r\n        setConvertedValue(sensOne / 3.33);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.From}>\r\n        Select Game (from):\r\n        <Select onChange={handleChangeFrom} options={options} />\r\n      </div>\r\n      <div className={classes.To}>\r\n        Select Game (to):\r\n        <Select onChange={handleChangeTo} options={options} />\r\n      </div>\r\n      <div>\r\n        <div className={classes.SensDpiFrom}>\r\n          <div>{gameOne.label} Sensitivity & DPI:</div>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Sensitivity\"\r\n              onChange={handleChangeFromSens}\r\n              defaultValue={sensOne}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"DPI\"\r\n              defaultValue={dpiOne}\r\n              onChange={handleChangeFromDpi}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.ConvertedValue}>Sensitivity: {showConverted()}</div>\r\n      <div className={classes.WaitingLeft}>\r\n        <ClimbingBoxLadder size={10} color={\"gray\"} loading={loading} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport classes from \"./TitleHead.module.css\";\r\nimport Typist from \"react-typist\";\r\nimport { FaBolt } from \"react-icons/fa\";\r\n\r\nfunction navbar() {\r\n  return (\r\n    <div>\r\n      <div className={classes.Title}>\r\n        <div>Ez-Sens</div>\r\n      </div>\r\n\r\n      <Typist className={classes.Text}>\r\n        <Typist.Delay ms={1000} />\r\n        <span>made with react. </span>\r\n        <Typist.Delay ms={500} />\r\n        <Typist.Backspace count={17} delay={400} />\r\n        <Typist.Delay ms={500} />\r\n        <span>\r\n          {\" \"}\r\n          by slippa. <FaBolt />{\" \"}\r\n        </span>\r\n      </Typist>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default navbar;\r\n","import React from \"react\";\r\nimport classes from './Calculator.module.css'\r\nimport Item from \"../Selections/Item/Item\";\r\nimport TitleHead from \"./TitleHead/TitleHead\";\r\n\r\nfunction calculator() {\r\n  return (\r\n    <div>\r\n    <TitleHead/>\r\n    <div className={classes.Items}>\r\n      <Item/>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default calculator;\r\n","import React from \"react\";\r\nimport Particles from \"react-particles-js\";\r\n\r\nexport default () => (\r\n  <div\r\n    style={{\r\n      position: \"absolute\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    }}\r\n  >\r\n    <Particles\r\n      params={{\r\n        particles: {\r\n          number: {\r\n            value: 10,\r\n          },\r\n          size: {\r\n            value: 2,\r\n          },\r\n          color: {\r\n            value: \"#080808\",\r\n          },\r\n          line_linked: {\r\n            enable: false,\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  </div>\r\n);\r\n","import React from 'react';\nimport './App.css';\nimport Calculator from '../src/Components/Calculator/UI/Calculator';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport ParticleComponent from '../src/Components/Calculator/UI/Particles/ParticleComponent';\n\nfunction App() {\n  return (\n    <Router>\n      <div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\"\n        }}\n      >\n        <ParticleComponent />\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }}\n        >\n          <Calculator/>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"TitleHead_Title__15cq1\",\"fadein\":\"TitleHead_fadein__28QVG\",\"Text\":\"TitleHead_Text__28D1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Items\":\"Calculator_Items__2t8EY\",\"fadein\":\"Calculator_fadein__-Wjl6\"};"],"sourceRoot":""}